 
Data Analysis

1)SELECT Customer_ID, MAX(Income), MIN(Income), Education FROM customer_profile

2)SELECT AVG(Wines_Products), AVG(Fruits_Products), AVG(Meat_Products), AVG(Fish_Products), AVG(Sweet_Products) FROM purshase_total;

  Total Product Sale above the totlat midpoint with customer info to create temp table to analyis common factors base on occurrence

3)CREATE TEMPORARY TABLE Top_Wines_Products_buyer SELECT customer_profile.Customer_ID, customer_profile.Income, customer_profile.Education, customer_profile.Marital_Status, customer_profile.Children, purshase_total.Wines_Products 
FROM customer_profile  JOIN  purshase_total ON purshase_total.Customer_ID = customer_profile.Customer_ID  
WHERE purshase_total.Wines_Products > 305;

#common factors
#Income
SELECT  AVG(Income) FROM Top_Wines_Products_buyer;

#Education
SELECT Education, COUNT(Education) AS `value_occurrence` 
FROM Top_Wines_Products_buyer
GROUP BY Education
ORDER BY value_occurrence DESC;


SELECT Marital_Status, COUNT(Marital_Status) AS `value_occurrence` 
FROM Top_Wines_Products_buyer
GROUP BY Marital_Status
ORDER BY value_occurrence DESC;

#Children
SELECT Children, COUNT(Children) AS `value_occurrence` 
FROM Top_Wines_Products_buyer
GROUP BY Children
ORDER BY value_occurrence DESC;


4)CREATE TEMPORARY TABLE Top_Meat_Products_buyer SELECT customer_profile.Customer_ID, customer_profile.Income, customer_profile.Education, customer_profile.Marital_Status, customer_profile.Children, purshase_total.Meat_Products 
FROM customer_profile  JOIN  purshase_total ON purshase_total.Customer_ID = customer_profile.Customer_ID  
WHERE purshase_total.Meat_Products > 165;

#common factors
#Income
SELECT  AVG(Income) FROM Top_Meat_Products_buyer;

#Education
SELECT Education, COUNT(Education) AS `value_occurrence` 
FROM Top_Meat_Products_buyer
GROUP BY Education
ORDER BY value_occurrence DESC;


SELECT Marital_Status, COUNT(Marital_Status) AS `value_occurrence` 
FROM Top_Meat_Products_buyer
GROUP BY Marital_Status
ORDER BY value_occurrence DESC;

#Children
SELECT Children, COUNT(Children) AS `value_occurrence` 
FROM Top_Meat_Products_buyer
GROUP BY Children
ORDER BY value_occurrence DESC;


5)CREATE TEMPORARY TABLE Top_Fish_Products_buyer SELECT customer_profile.Customer_ID, customer_profile.Income, customer_profile.Education, customer_profile.Marital_Status, customer_profile.Children, purshase_total.Fish_Products 
FROM customer_profile  JOIN  purshase_total ON purshase_total.Customer_ID = customer_profile.Customer_ID  
WHERE purshase_total.Fish_Products > 37;

#common factors
#Income
SELECT  AVG(Income) FROM Top_Fish_Products_buyer;

#Education
SELECT Education, COUNT(Education) AS `value_occurrence` 
FROM Top_Fish_Products_buyer
GROUP BY Education
ORDER BY value_occurrence DESC;


SELECT Marital_Status, COUNT(Marital_Status) AS `value_occurrence` 
FROM Top_Fish_Products_buyer
GROUP BY Marital_Status
ORDER BY value_occurrence DESC;

#Children
SELECT Children, COUNT(Children) AS `value_occurrence` 
FROM Top_Fish_Products_buyer
GROUP BY Children
ORDER BY value_occurrence DESC;


6)CREATE TEMPORARY TABLE Top_Sweet_Products_buyer SELECT customer_profile.Customer_ID, customer_profile.Income, customer_profile.Education, customer_profile.Marital_Status, customer_profile.Children, purshase_total.Sweet_Products 
FROM customer_profile  JOIN  purshase_total ON purshase_total.Customer_ID = customer_profile.Customer_ID  
WHERE purshase_total.Sweet_Products > 27;

#common factors
#Income
SELECT  AVG(Income) FROM Top_Fish_Products_buyer;

#Education
SELECT Education, COUNT(Education) AS `value_occurrence` 
FROM Top_Fish_Products_buyer
GROUP BY Education
ORDER BY value_occurrence DESC;


SELECT Marital_Status, COUNT(Marital_Status) AS `value_occurrence` 
FROM Top_Fish_Products_buyer
GROUP BY Marital_Status
ORDER BY value_occurrence DESC;

#Children
SELECT Children, COUNT(Children) AS `value_occurrence` 
FROM Top_Fish_Products_buyer
GROUP BY Children
ORDER BY value_occurrence DESC;


7)CREATE TEMPORARY TABLE Top_Fruits_Products_buyer SELECT customer_profile.Customer_ID, customer_profile.Income, customer_profile.Education, customer_profile.Marital_Status, customer_profile.Children, purshase_total.Fruits_Products 
FROM customer_profile  JOIN  purshase_total ON purshase_total.Customer_ID = customer_profile.Customer_ID  
WHERE purshase_total.Fruits_Products > 26;

#common factors
#Income
SELECT  AVG(Income) FROM Top_Fruits_Products_buyer;

#Education
SELECT Education, COUNT(Education) AS `value_occurrence` 
FROM Top_Fruits_Products_buyer
GROUP BY Education
ORDER BY value_occurrence DESC;


SELECT Marital_Status, COUNT(Marital_Status) AS `value_occurrence` 
FROM Top_Fruits_Products_buyer
GROUP BY Marital_Status
ORDER BY value_occurrence DESC;

#Children
SELECT Children, COUNT(Children) AS `value_occurrence` 
FROM Top_Fruits_Products_buyer
GROUP BY Children
ORDER BY value_occurrence DESC;


8)CREATE TEMPORARY TABLE Top_Wine_buyerProfile SELECT customer_profile.Income,customer_profile.Customer_ID,customer_profile.Marital_Status,customer_profile.Education, customer_profile.Children,  purshase_total.Wines_Products,purchase_methods.PurchasesFromStore,purchase_methods.PurchasesFromWeb,purchase_methods.PurchasesFromCatalog FROM customer_profile 
INNER JOIN purshase_total ON purshase_total.Customer_ID = customer_profile.Customer_ID 
INNER JOIN purchase_methods ON purchase_methods.Customer_ID = customer_profile.Customer_ID
WHERE (customer_profile.Education = "Graduate" OR customer_profile.Education = "PhD") AND (customer_profile.Marital_Status = "Married" OR customer_profile.Marital_Status ="Together") AND (customer_profile.Children = "0")  
ORDER BY `purshase_total`.`Wines_Products`  DESC;


SELECT AVG(Wines_Products), AVG(PurchasesFromStore), AVG(PurchasesFromWeb),AVG(PurchasesFromCatalog) FROM Top_Wine_buyerProfile



